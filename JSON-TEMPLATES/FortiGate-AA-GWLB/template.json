{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the FortiGate VM"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the FortiGate VM"
            }
        },
        "fortiGateNamePrefix": {
            "type": "String",
            "metadata": {
                "description": "Naming prefix for all deployed resources. The FortiGate VMs will have the suffix '-FGT-A' and '-FGT-B'. For example if the prefix is 'ACME-01' the FortiGates will be named 'ACME-01-FGT-A' and 'ACME-01-FGT-B'"
            }
        },
        "fortiGateImageSKU": {
            "defaultValue": "fortinet_fg-vm",
            "allowedValues": [
                "fortinet_fg-vm",
                "fortinet_fg-vm_payg_2022"
            ],
            "type": "String",
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
            }
        },
        "fortiGateImageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "6.2.0",
                "6.2.2",
                "6.2.4",
                "6.2.5",
                "6.4.0",
                "6.4.2",
                "6.4.3",
                "6.4.5",
                "6.4.6",
                "6.4.7",
                "6.4.8",
                "7.0.0",
                "7.0.1",
                "7.0.2",
                "7.0.3",
                "7.0.4",
                "7.0.5",
                "latest"
            ],
            "type": "String",
            "metadata": {
                "description": "Select the image version"
            }
        },
        "fortiGateAdditionalCustomData": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
            }
        },
        "instanceType": {
            "defaultValue": "Standard_D4as_v4",
            "allowedValues": [
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_F2s_v2",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D2_v4",
                "Standard_D4_v4",
                "Standard_D8_v4",
                "Standard_D16_v4",
                "Standard_D32_v4",
                "Standard_D2s_v4",
                "Standard_D4s_v4",
                "Standard_D8s_v4",
                "Standard_D16s_v4",
                "Standard_D32s_v4",
                "Standard_D2a_v4",
                "Standard_D4a_v4",
                "Standard_D8a_v4",
                "Standard_D16a_v4",
                "Standard_D32a_v4",
                "Standard_D2as_v4",
                "Standard_D4as_v4",
                "Standard_D8as_v4",
                "Standard_D16as_v4",
                "Standard_D32as_v4",
                "Standard_D2_v5",
                "Standard_D4_v5",
                "Standard_D8_v5",
                "Standard_D16_v5",
                "Standard_D32_v5",
                "Standard_D2s_v5",
                "Standard_D4s_v5",
                "Standard_D8s_v5",
                "Standard_D16s_v5",
                "Standard_D32s_v5",
                "Standard_D2as_v5",
                "Standard_D4as_v5",
                "Standard_D8as_v5",
                "Standard_D16as_v5",
                "Standard_D32as_v5",
                "Standard_D2ads_v5",
                "Standard_D4ads_v5",
                "Standard_D8ads_v5",
                "Standard_D16ads_v5",
                "Standard_D32ads_v5"
            ],
            "type": "String",
            "metadata": {
                "description": "Virtual Machine size selection"
            }
        },
        "availabilityOptions": {
            "defaultValue": "Availability Set",
            "allowedValues": [
                "Availability Set",
                "Availability Zones"
            ],
            "type": "String",
            "metadata": {
                "description": "Deploy FortiGate VMs in an Availability Set or Availability Zones. If Availability Zones deployment is selected but the location does not support Availability Zones an Availability Set will be deployed. If Availability Zones deployment is selected and Availability Zones are available in the location, FortiGate A will be placed in Zone 1, FortiGate B will be placed in Zone 2"
            }
        },
        "acceleratedNetworking": {
            "defaultValue": true,
            "allowedValues": [
                false,
                true
            ],
            "type": "Bool",
            "metadata": {
                "description": "Accelerated Networking enables direct connection between the VM and network card. Only available on 2 CPU F/Fs and 4 CPU D/Dsv2, D/Dsv3, E/Esv3, Fsv2, Lsv2, Ms/Mms and Ms/Mmsv2"
            }
        },
        "publicIP1NewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Public IP for FortiGate-A for management purposes"
            }
        },
        "publicIP1Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address for FortiGate-A, if no name is provided the default name will be the Resource Group Name as the Prefix and '-FGT-A-PIP' as the suffix"
            }
        },
        "publicIP1ResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "publicIP2NewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Public IP for FortiGate-B for management purposes"
            }
        },
        "publicIP2Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address for FortiGate-B, if no name is provided the default name will be the Resource Group Name as the Prefix and '-FGT-B-PIP' as the suffix"
            }
        },
        "publicIP2ResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure virtual network, required if utilizing and existing VNET. If no name is provided the default name will be the Resource Group Name as the Prefix and '-VNET' as the suffix"
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Resource Group containing the existing virtual network, leave blank if a new VNET is being utilized"
            }
        },
        "vnetAddressPrefix": {
            "defaultValue": "172.16.136.0/22",
            "type": "String",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "subnet1Name": {
            "defaultValue": "ProviderSubnet",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1Prefix": {
            "defaultValue": "172.16.136.0/26",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "subnet1StartAddress": {
            "defaultValue": "172.16.136.4",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 start address, 2 consecutive private IPs are required"
            }
        },
        "subnet2Name": {
            "defaultValue": "ManagementSubnet",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "subnet2Prefix": {
            "defaultValue": "172.16.136.64/26",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "subnet2StartAddress": {
            "defaultValue": "172.16.136.68",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 start address, 2 consecutive private IPs are required"
            }
        },
        "serialConsole": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Enable Serial Console"
            }
        },
        "fortiManager": {
            "defaultValue": "no",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Connect to FortiManager"
            }
        },
        "fortiManagerIP": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiManager IP or DNS name to connect to on port TCP/541"
            }
        },
        "fortiManagerSerial": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiManager serial number to add the deployed FortiGate into the FortiManager"
            }
        },
        "fortiGateLicenseBYOLA": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Primary FortiGate BYOL license content"
            }
        },
        "fortiGateLicenseBYOLB": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Secondary FortiGate BYOL license content"
            }
        },
        "fortiGateLicenseFlexVMA": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Primary FortiGate BYOL Flex-VM license token"
            }
        },
        "fortiGateLicenseFlexVMB": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Secondary FortiGate BYOL Flex-VM license token"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "fortinetTags": {
            "defaultValue": {
                "publisher": "Fortinet",
                "template": "Active-Active-ELB-ILB",
                "provider": "6EB3B02F-50E5-4A3E-8CB8-2E12925831AA"
            },
            "type": "Object"
        }
    },
    "variables": {
        "imagePublisher": "fortinet",
        "imageOffer": "fortinet_fortigate-vm_v5",
        "availabilitySetName_var": "[format('{0}-AvailabilitySet', parameters('fortiGateNamePrefix'))]",
        "availabilitySetId": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName_var'))]"
        },
        "deploymentPrefix": "[format('{0}-WS', parameters('fortiGateNamePrefix'))]",
        "vnetName_var": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('fortiGateNamePrefix')), parameters('vnetName'))]",
        "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet1Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet1Name')))]",
        "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet2Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet2Name')))]",
        "fgaVmName_var": "[format('{0}-FGT-A', parameters('fortiGateNamePrefix'))]",
        "fgbVmName_var": "[format('{0}-FGT-B', parameters('fortiGateNamePrefix'))]",
        "fmgCustomData": "[if(equals(parameters('fortiManager'), 'yes'), format('\nconfig system central-management\nset type fortimanager\n set fmg {0}\nset serial-number {1}\nend\n config system interface\n edit port1\n append allowaccess fgfm\n end\n config system interface\n edit port2\n append allowaccess fgfm\n end\n', parameters('fortiManagerIP'), parameters('fortiManagerSerial')), '')]",
        "fgaCustomDataFlexVM": "[if(equals(parameters('fortiGateLicenseFlexVMA'), ''), '', format('exec vm-license {0}\n', parameters('fortiGateLicenseFlexVMA')))]",
        "fgbCustomDataFlexVM": "[if(equals(parameters('fortiGateLicenseFlexVMB'), ''), '', format('exec vm-license {0}\n', parameters('fortiGateLicenseFlexVMB')))]",
        "customDataHeader": "Content-Type: multipart/mixed; boundary=\"12345\"\nMIME-Version: 1.0\n--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"config\"\n\n",
        "fgaCustomDataGWLB": "[format('{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}', variables('customDatafgaFabricSDN'), variables('customDatafgaHostname'), variables('customDatafgaProbeResponse'), variables('customDatafgaAddresses'), variables('customDatafgaInterfaces'), variables('customDatafgaRouter'), variables('customDatafgaVXLan'), variables('customDatafgaVirtualWirePair'), variables('customDatafgaFWPolicy'), variables('customDataFMGandFlexVMA'))]",
        "fgbCustomDataGWLB": "[format('{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}', variables('customDatafgbFabricSDN'), variables('customDatafgbHostname'), variables('customDatafgbProbeResponse'), variables('customDatafgbAddresses'), variables('customDatafgbInterfaces'), variables('customDatafgbRouter'), variables('customDatafgbVXLan'), variables('customDatafgbVirtualWirePair'), variables('customDatafgbFWPolicy'), variables('customDataFMGandFlexVMB'))]",
        "customDatafgaFabricSDN": "config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\n",
        "customDatafgaHostname": "[format('config system global\n set hostname {0}\n end\n', variables('fgaVmName_var'))]",
        "customDatafgaProbeResponse": "config system probe-response\n set http-probe-value OK\n set mode http-probe\n end\n",
        "customDatafgaAddresses": "config firewall address\n edit AzureProbeSourceIP\n set allow-routing enable\n set subnet 168.63.129.16/32\n set comment Azure_PIP_used_for_internal_platform_resources\n next\n end\n",
        "customDatafgaInterfaces": "[format('config system interface\n edit port1\nset mode static\n set ip {0}/{1}\n set description External\n set mtu-override enable\n set mtu 1570\n set allowaccess probe-response\n next\n edit port2\n set mode static\n set ip {2}/{3}\n set allowaccess ping https ssh fgfm probe-response\n set description Management\n next\n end\n', variables('sn1IPfga'), variables('sn1CIDRmask'), variables('sn2IPfga'), variables('sn2CIDRmask'))]",
        "customDatafgaRouter": "[format('config router static\n edit 1\n set gateway {0}\n set device port2\n next\n edit 2\nset dstaddr AzureProbeSourceIP\nset device port1\n set gateway {1}\n next\n end\n', variables('sn2GatewayIP'), variables('sn1GatewayIP'))]",
        "customDatafgaVXLan": "[format('config system vxlan\n edit extvxlan\n set interface port1\n set vni 801\n set dstport 2001\n set remote-ip {0}\n next\n edit intvxlan\n set interface port1\n set vni 800 \n set dstport 2000 \n set remote-ip {1}\n next\n end\n', variables('sn1IPgwlb'), variables('sn1IPgwlb'))]",
        "customDatafgaVirtualWirePair": "config system virtual-wire-pair \n edit vxlanvwpair \n set member extvxlan intvxlan \n next \n end\n",
        "customDatafgaFWPolicy": "config firewall policy \n edit 1\n set name int-ext_vxlan \n set srcintf extvxlan intvxlan\n set dstintf extvxlan intvxlan \n set srcaddr all\n set dstaddr all \n set action accept\n set schedule always\n set service ALL\n set logtraffic all\n set utm-status enable\n set ssl-ssh-profile certificate-inspection \n set ips-sensor default \n next\n end\n",
        "customDataFMGandFlexVMA": "[format('{0}{1}\n{2}\n', variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgaCustomDataFlexVM'))]",
        "customDatafgbFabricSDN": "config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\n",
        "customDatafgbHostname": "[format('config system global\n set hostname {0}\n end\n', variables('fgbVmName_var'))]",
        "customDatafgbProbeResponse": "config system probe-response\n set http-probe-value OK\n set mode http-probe\n end\n",
        "customDatafgbAddresses": "config firewall address\n edit AzureProbeSourceIP\n set allow-routing enable\n set subnet 168.63.129.16/32\n set comment Azure_PIP_used_for_internal_platform_resources\n next\n end\n",
        "customDatafgbInterfaces": "[format('config system interface\n edit port1\nset mode static\n set ip {0}/{1}\n set description External\n set mtu-override enable\n set mtu 1570\n set allowaccess probe-response\n next\n edit port2\n set mode static\n set ip {2}/{3}\n set allowaccess ping https ssh fgfm probe-response\n set description Management\n next\n end\n', variables('sn1IPfgb'), variables('sn1CIDRmask'), variables('sn2IPfgb'), variables('sn2CIDRmask'))]",
        "customDatafgbRouter": "[format('config router static\n edit 1\n set gateway {0}\n set device port2\n next\n edit 2\nset dstaddr AzureProbeSourceIP\nset device port1\n set gateway {1}\n next\n end\n', variables('sn2GatewayIP'), variables('sn1GatewayIP'))]",
        "customDatafgbVXLan": "[format('config system vxlan\n edit extvxlan\n set interface port1\n set vni 801\n set dstport 2001\n set remote-ip {0}\n next\n edit intvxlan\n set interface port1\n set vni 800 \n set dstport 2000 \n set remote-ip {1}\n next\n end\n', variables('sn1IPgwlb'), variables('sn1IPgwlb'))]",
        "customDatafgbVirtualWirePair": "config system virtual-wire-pair \n edit vxlanvwpair \n set member extvxlan intvxlan \n next \n end\n",
        "customDatafgbFWPolicy": "config firewall policy \n edit 1\n set name int-ext_vxlan \n set srcintf extvxlan intvxlan\n set dstintf extvxlan intvxlan \n set srcaddr all\n set dstaddr all \n set action accept\n set schedule always\n set service ALL\n set logtraffic all\n set utm-status enable\n set ssl-ssh-profile certificate-inspection \n set ips-sensor default \n next\n end\n",
        "customDataFMGandFlexVMB": "[format('{0}{1}\n{2}\n', variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgbCustomDataFlexVM'))]",
        "customDataLicenseHeader": "--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"fgtlicense\"\n\n",
        "customDataFooter": "--12345--\n",
        "fgaCustomDataCombined": "[format('{0}{1}{2}{3}{4}', variables('customDataHeader'), variables('fgaCustomDataGWLB'), variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOLA'), variables('customDataFooter'))]",
        "fgbCustomDataCombined": "[format('{0}{1}{2}{3}{4}', variables('customDataHeader'), variables('fgbCustomDataGWLB'), variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOLB'), variables('customDataFooter'))]",
        "fgaCustomData": "[base64(if(equals(parameters('fortiGateLicenseBYOLA'), ''), variables('fgaCustomDataGWLB'), variables('fgaCustomDataCombined')))]",
        "fgbCustomData": "[base64(if(equals(parameters('fortiGateLicenseBYOLB'), ''), variables('fgbCustomDataGWLB'), variables('fgbCustomDataCombined')))]",
        "fgaNic1Name_var": "[format('{0}-Nic1', variables('fgaVmName_var'))]",
        "fgaNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic1Name_var'))]",
        "fgaNic2Name_var": "[format('{0}-Nic2', variables('fgaVmName_var'))]",
        "fgaNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic2Name_var'))]",
        "fgbNic1Name_var": "[format('{0}-Nic1', variables('fgbVmName_var'))]",
        "fgbNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic1Name_var'))]",
        "fgbNic2Name_var": "[format('{0}-Nic2', variables('fgbVmName_var'))]",
        "fgbNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic2Name_var'))]",
        "serialConsoleStorageAccountName_var": "[format('console{0}', uniqueString(resourceGroup().id))]",
        "serialConsoleStorageAccountType": "Standard_LRS",
        "serialConsoleEnabled": "[if(equals(parameters('serialConsole'), 'yes'), true(), false())]",
        "publicIP1Name_var": "[if(equals(parameters('publicIP1Name'), ''), format('{0}-FGT-A-PIP', parameters('fortiGateNamePrefix')), parameters('publicIP1Name'))]",
        "publicIP1Id": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var')), resourceId(parameters('publicIP1ResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var')))]",
        "publicIP2Name_var": "[if(equals(parameters('publicIP2Name'), ''), format('{0}-FGT-B-PIP', parameters('fortiGateNamePrefix')), parameters('publicIP2Name'))]",
        "publicIP2Id": "[if(equals(parameters('publicIP2NewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP2Name_var')), resourceId(parameters('publicIP2ResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('publicIP2Name_var')))]",
        "nsgName_var": "[format('{0}-NSG-Allow-All', parameters('fortiGateNamePrefix'))]",
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
        "sn1IPArray": "[split(parameters('subnet1Prefix'), '.')]",
        "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
        "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'), '/')]",
        "sn1CIDRmask": "[string(int(variables('sn1IPArray2nd')[1]))]",
        "sn1IPArray3": "[string(add(int(variables('sn1IPArray2nd')[0]), 1))]",
        "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
        "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
        "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
        "sn1GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), variables('sn1IPArray3'))]",
        "sn1IPStartAddress": "[split(parameters('subnet1StartAddress'), '.')]",
        "sn1IPgwlb": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), int(variables('sn1IPStartAddress')[3]))]",
        "sn1IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), add(int(variables('sn1IPStartAddress')[3]), 1))]",
        "sn1IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), add(int(variables('sn1IPStartAddress')[3]), 2))]",
        "sn2IPArray": "[split(parameters('subnet2Prefix'), '.')]",
        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'), '/')]",
        "sn2CIDRmask": "[string(int(variables('sn2IPArray2nd')[1]))]",
        "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]), 1))]",
        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
        "sn2GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), variables('sn2IPArray3'))]",
        "sn2IPStartAddress": "[split(parameters('subnet2StartAddress'), '.')]",
        "sn2IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 1))]",
        "sn2IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 2))]",
        "GWLBName_var": "[format('{0}-GWLB', parameters('fortiGateNamePrefix'))]",
        "GWLBFEName": "[format('{0}-GWLB-{1}-FrontEnd', parameters('fortiGateNamePrefix'), parameters('subnet1Name'))]",
        "GWLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('GWLBName_var'), variables('GWLBFEName'))]",
        "GWLBBEName": "[format('{0}-GWLB-{1}-BackEnd', parameters('fortiGateNamePrefix'), parameters('subnet1Name'))]",
        "GWLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('GWLBName_var'), variables('GWLBBEName'))]",
        "GWLBProbeName": "lbprobe",
        "GWLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('GWLBName_var'), variables('GWLBProbeName'))]",
        "useAZ": "[and(not(empty(pickZones('Microsoft.Compute', 'virtualMachines', parameters('location')))), equals(parameters('availabilityOptions'), 'Availability Zones'))]",
        "zone1": [
            "1"
        ],
        "zone2": [
            "2"
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[variables('serialConsoleStorageAccountName_var')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('serialConsoleStorageAccountType')]"
            },
            "kind": "Storage",
            "condition": "[equals(parameters('serialConsole'), 'yes')]"
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2021-07-01",
            "name": "[variables('availabilitySetName_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "condition": "[not(variables('useAZ'))]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-04-01",
            "name": "[variables('vnetName_var')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2021-08-01",
            "name": "[variables('GWLBName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Gateway"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('GWLBFEName')]",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPgwlb')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('GWLBBEName')]",
                        "properties": {
                            "tunnelInterfaces": [
                                {
                                    "port": 2000,
                                    "identifier": 800,
                                    "protocol": "VxLan",
                                    "type": "Internal"
                                },
                                {
                                    "port": 2001,
                                    "identifier": 801,
                                    "protocol": "VxLan",
                                    "type": "External"
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('GWLBFEId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('GWLBBEId')]"
                            },
                            "probe": {
                                "id": "[variables('GWLBProbeId')]"
                            },
                            "protocol": "All",
                            "frontendPort": 0,
                            "backendPort": 0
                        },
                        "name": "lbruleFEall"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8008,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "[variables('GWLBProbeName')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-04-01",
            "name": "[variables('nsgName_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInbound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[variables('publicIP1Name_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[format('{0}-{1}', toLower(variables('fgaVmName_var')), uniqueString(resourceGroup().id))]"
                }
            },
            "condition": "[equals(parameters('publicIP1NewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[variables('publicIP2Name_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[format('{0}-{1}', toLower(variables('fgbVmName_var')), uniqueString(resourceGroup().id))]"
                }
            },
            "condition": "[equals(parameters('publicIP2NewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgaNic1Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('GWLBName_var'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPfga')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('GWLBBEId')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgbNic1Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic1Name_var'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('GWLBName_var'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPfgb')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('GWLBBEId')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgaNic2Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn2IPfga')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[variables('publicIP1Id')]"
                            },
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgbNic2Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic2Name_var'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP2Name_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn2IPfgb')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[variables('publicIP2Id')]"
                            },
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('fgaVmName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic1Name_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic2Name_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "zones": "[if(variables('useAZ'), variables('zone1'), json('null'))]",
            "identity": {
                "type": "SystemAssigned"
            },
            "plan": {
                "name": "[parameters('fortiGateImageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), json('null'))]",
                "osProfile": {
                    "computerName": "[variables('fgaVmName_var')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('fgaCustomData')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('fortiGateImageSKU')]",
                        "version": "[parameters('fortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('fgaNic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('fgaNic2Id')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('serialConsoleEnabled')]",
                        "storageUri": "[if(equals(parameters('serialConsole'), 'yes'), reference(variables('serialConsoleStorageAccountName_var'), '2021-08-01').primaryEndpoints.blob, json('null'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('fgbVmName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic1Name_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic2Name_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "zones": "[if(variables('useAZ'), variables('zone2'), json('null'))]",
            "identity": {
                "type": "SystemAssigned"
            },
            "plan": {
                "name": "[parameters('fortiGateImageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), json('null'))]",
                "osProfile": {
                    "computerName": "[variables('fgbVmName_var')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('fgbCustomData')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('fortiGateImageSKU')]",
                        "version": "[parameters('fortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('fgbNic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('fgbNic2Id')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('serialConsoleEnabled')]",
                        "storageUri": "[if(equals(parameters('serialConsole'), 'yes'), reference(variables('serialConsoleStorageAccountName_var'), '2021-08-01').primaryEndpoints.blob, json('null'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "Windows-Server-Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('GWLBName_var'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "Username": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "Password": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "DeploymentPrefix": {
                        "value": "[variables('deploymentPrefix')]"
                    },
                    "fortiGateNamePrefix": {
                        "value": "[parameters('fortiGateNamePrefix')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                        "_generator": {
                            "name": "bicep",
                            "version": "0.8.9.13224",
                            "templateHash": "6655483726220964233"
                        }
                    },
                    "parameters": {
                        "location": {
                            "type": "string",
                            "defaultValue": "canadacentral"
                        },
                        "DeploymentPrefix": {
                            "type": "string",
                            "defaultValue": "AJLab-WS"
                        },
                        "vNETCIDR": {
                            "type": "string",
                            "defaultValue": "10.0.0.0/16"
                        },
                        "sn1Name": {
                            "type": "string",
                            "defaultValue": "default"
                        },
                        "sn1CIDR": {
                            "type": "string",
                            "defaultValue": "10.0.0.0/24"
                        },
                        "Username": {
                            "type": "string"
                        },
                        "Password": {
                            "type": "secureString"
                        },
                        "fortiGateNamePrefix": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "resourcegroup": "[resourceGroup().name]",
                        "subscriptionid": "[subscription().subscriptionId]",
                        "vNETName": "[format('{0}-vNET', parameters('DeploymentPrefix'))]",
                        "vmName": "[format('{0}-VM', parameters('DeploymentPrefix'))]",
                        "diskName": "[format('{0}-disk', parameters('DeploymentPrefix'))]",
                        "NicName": "[format('{0}-NIC', parameters('DeploymentPrefix'))]",
                        "snID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNETName'), parameters('sn1Name'))]",
                        "NicID": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]",
                        "PipName": "[format('{0}-PIP', parameters('DeploymentPrefix'))]",
                        "PipId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PipName'))]",
                        "NSGName": "[format('{0}-NSG', parameters('DeploymentPrefix'))]",
                        "NSGId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName'))]",
                        "GWLBName_var": "[format('{0}-GWLB', parameters('fortiGateNamePrefix'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2019-11-01",
                            "name": "[variables('vNETName')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vNETCIDR')]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[parameters('sn1Name')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('sn1CIDR')]",
                                            "networkSecurityGroup": {
                                                "id": "[variables('NSGId')]"
                                            }
                                        }
                                    }
                                ]
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2019-11-01",
                            "name": "[variables('NSGName')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "unblock_all_tcp_rule",
                                        "properties": {
                                            "description": "unblock_all_tcp_rule",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "0-65535",
                                            "destinationPortRange": "0-65535",
                                            "sourceAddressPrefix": "0.0.0.0/0",
                                            "destinationAddressPrefix": "0.0.0.0/0",
                                            "access": "Allow",
                                            "priority": 123,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "unblock_all_tcp_outrule",
                                        "properties": {
                                            "description": "unblock_all_tcp_outrule",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "0-65535",
                                            "destinationPortRange": "0-65535",
                                            "sourceAddressPrefix": "0.0.0.0/0",
                                            "destinationAddressPrefix": "0.0.0.0/0",
                                            "access": "Allow",
                                            "priority": 123,
                                            "direction": "Outbound"
                                        }
                                    },
                                    {
                                        "name": "unblock_all_udp_ports",
                                        "properties": {
                                            "description": "Unblock_all_udp_ports",
                                            "protocol": "Udp",
                                            "sourcePortRange": "0-65535",
                                            "destinationPortRange": "0-65535",
                                            "sourceAddressPrefix": "0.0.0.0/0",
                                            "destinationAddressPrefix": "0.0.0.0/0",
                                            "access": "Allow",
                                            "priority": 125,
                                            "direction": "Inbound"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2021-08-01",
                            "name": "[variables('NicName')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "gatewayLoadBalancer": {
                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/loadBalancers/{2}/frontendIPConfigurations/{3}-ProviderSubnet-FrontEnd', variables('subscriptionid'), variables('resourcegroup'), variables('GWLBName_var'), variables('GWLBName_var'))]"
                                            },
                                            "privateIPAllocationMethod": "Dynamic",
                                            "publicIPAddress": {
                                                "id": "[variables('PipId')]"
                                            },
                                            "subnet": {
                                                "id": "[variables('snID')]"
                                            }
                                        }
                                    }
                                ]
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('PipName'))]",
                                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNETName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2019-11-01",
                            "name": "[variables('PipName')]",
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2020-12-01",
                            "name": "[variables('vmName')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "Standard_A2_v2"
                                },
                                "osProfile": {
                                    "computerName": "WindowsServer",
                                    "adminUsername": "[parameters('Username')]",
                                    "adminPassword": "[parameters('Password')]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "MicrosoftWindowsServer",
                                        "offer": "WindowsServer",
                                        "sku": "2012-R2-Datacenter",
                                        "version": "latest"
                                    },
                                    "osDisk": {
                                        "name": "[variables('diskName')]",
                                        "caching": "ReadWrite",
                                        "createOption": "FromImage"
                                    }
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[variables('NicID')]"
                                        }
                                    ]
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
                            ]
                        }
                    ],
                    "outputs": {
                        "WindowsServerPublicIP": {
                            "type": "string",
                            "value": "[reference(variables('PipId')).ipAddress]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "fortiGateAPublicIP": {
            "type": "String",
            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP1Id')).ipAddress, '')]"
        },
        "fortiGateBPublicIP": {
            "type": "String",
            "value": "[if(equals(parameters('publicIP2NewOrExisting'), 'new'), reference(variables('publicIP2Id')).ipAddress, '')]"
        },
        "fortiGateAFQDN": {
            "type": "String",
            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP1Id')).dnsSettings.fqdn, '')]"
        },
        "fortiGateBFQDN": {
            "type": "String",
            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP2Id')).dnsSettings.fqdn, '')]"
        }
    }
}